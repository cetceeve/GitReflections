Refelections for lesson 3

When would you want to use a remote repository rather than keeping all your work
local?

    when working in a team on one project or if working from several pcs on one project

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    because i might not want to have all changes online/local online/local.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    fork is basically cloning on github. a fork is a different persons repository and
	therefore has this persons label atteched in addission to my own
	clones are copies from github to local or local to local
	branches are groups of commits in the local ore public repository

What is the benefit of having a copy of the last known state of the remote
stored locally?

    i can decide when to merge and when to push
	fast-forward merging can be applied 
	git can identivy merge conflicts

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    i would use it to work on one project from different computers
	i have no idea how to actually apply it to really coding because the files are
	split up on different directorys and probably dont want the .git there, too
	collaborating with others seems to be super easy, but i think it gets quite 
	chaotic quickly with all the commits and maybe comments on github.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    seperate branches make scense for adding a feature that requires a bunch of code
	you do not want to destroy the master code while working on that feature especially when 
	collaborating with other creators. making the changes directly to master is good 
	for a quck local version-control system but not good for sharing or larger projects
	basically branches make git powerful enouph to handle big projects.
	pull request are a way to directly share code to collaborators and make them approve it
	before changing the current state of the project.
